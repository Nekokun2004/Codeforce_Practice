import functools 
  .reduce(function, iterable, initializer)=ใช้การการทำฟังก์ชันแบบต่อเนื่องได้ในlist
    function=อะไรก็ได้ที่ต้องการทำเรื่อยๆ จนกว่าจะสิ้นสุดlist
    iterable=เป็นlistที่ต้องการหรือค่าที่ต้องการเอามาเข้าฟังก์ชัน
    initializer=เอาไว้กำหนดค่าเริ่มต้น เช่น 1
    groupby=เอาไว้แบ่งแยกกลุ่มอย่างชัดเจนเช่น 665566 จะได้ ['66', '55', '66'] วิธีใช้ก็ groups = [''.join(g) for _, g in groupby(s)]

import operator 
  .mul=เอาไว้ใช้คูณเหมือนกับการกำหนดเป็นแบบฟังก์ชัน(lambda x, y: x * y)

import collections  
  .Couter(lst)=นับตัวอักษรภายในlistผลลัพธ์ที่ได้คือdict
  deque()= ลิสต์สองด้านที่ใส่/ลบได้เร็ว เช่น [()] แต่ต้องกำหนดใส่ไว้ในตัวแปรตัวหนึ่งด้วย x = deque()
  ChainMap()=ใช้สำหรับรวมdictสองอันมั่ง เข้าด้วยกันแล้วก็ตัวที่เหมือนกันตัวที่addก่อนจะเป็นตัวทับแทน
  deque(เลข) = เป็นการหมุนlistไปตามทิศที่กำหนด เลขติดลบ = หมุนซ้าย / เลขบวก = หมุนขวา
  
import statistics 
  .mode(lst)=หาค่าที่เจอบ่อยที่สุดในlist

import sys
   วิธีใช้มีหลายแบบมาก sys.stdin สำหรับ loop , sys.stdin.readline สำหรับฟังก์ชัน input ,sys.stdin.readlines() สำหรับการอ่านค่า lst ออกมาที่เดียวยาวๆเลย
   type ชื่อไฟล์ input.txt | python ชื่อ .py ที่เราต้องการรันโดยใช sys

import math
  math.sqrt() สำหรับหารากที่สอง ,math.cbrt() สำหรับหารากที่สาม
  math.floor() ปัดเลขลง ให้เป็น int ,math.ceil() ปัดเลขขึ้นให้เป็น int
  pow(x, 3) เป็นการสั่งให้ ตัวซ้าย ยกกำลัง ตามเลขที่กำหนด // format pow(base, exp, mod=None)

ord(ตัวอักษร) มันจะเช็กตำแหน่งได้ เอาไว้ใช้แบบหาระยะห่างจาก a หรือ อย่างอื่นที่เป็น พยัญชนะได้
setdefault(x, []).append(y) ถ้าเจอ x ซ้ำก็จะ ใส่ไปที่ตัวเดิม